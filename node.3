API to create Mentor
// import Mentor model
const Mentor = require('../models/mentor');

// define the endpoint
router.post('/mentor', async (req, res) => {
 // get data from the request body
 const { name, subject } = req.body;

 // create a new mentor instance
 const mentor = new Mentor({ name, subject });

 // save the mentor to the database
 await mentor.save();

 // return the created mentor as a response
 res.status(201).json(mentor);
});

API to create Student
// import Student model
const Student = require('../models/student');

// define the endpoint
router.post('/student', async (req, res) => {
 // get data from the request body
 const { name, age } = req.body;

 // create a new student instance
 const student = new Student({ name, age });

 // save the student to the database
 await student.save();

 // return the created student as a response
 res.status(201).json(student);
});

 API to Assign a student to Mentor
// import Student and Mentor models
const Student = require('../models/student');
const Mentor = require('../models/mentor');

// define the endpoint
router.put('/assign/:studentId/:mentorId', async (req, res) => {
 // get student and mentor ids from the request parameters
 const { studentId, mentorId } = req.params;

 // find the student and mentor by their ids
 const student = await Student.findById(studentId);
 const mentor = await Mentor.findById(mentorId);

 // if the student or mentor does not exist, return an error response
 if (!student || !mentor) {
    return res.status(404).json({ message: 'Student or Mentor not found' });
 }

 // if the student already has a mentor, return an error response
 if (student.mentor) {
    return res.status(400).json({ message: 'Student already has a mentor' });
 }

 // assign the student to the mentor
 student.mentor = mentorId;
 mentor.students.push(studentId);

 // save the student and mentor to the database
 await student.save();
 await mentor.save();

 // return the updated student and mentor as a response
 res.status(200).json({ student, mentor });
});

 API to Assign or Change Mentor for particular Student
// import Student and Mentor models
const Student = require('../models/student');
const Mentor = require('../models/mentor');

// define the endpoint
router.put('/change/:studentId/:mentorId', async (req, res) => {
 // get student and mentor ids from the request parameters
 const { studentId, mentorId } = req.params;

 // find the student and mentor by their ids
 const student = await Student.findById(studentId);
 const mentor = await Mentor.findById(mentorId);

 // if the student or mentor does not exist, return an error response
 if (!student || !mentor) {
    return res.status(404).json({ message: 'Student or Mentor not found' });
 }

 // if the student does not have a mentor yet, return an error response
 if (!student.mentor) {
    return res.status(400).json({ message: 'Student does not have a mentor yet' });
 }

 // get the student's current mentor
 const currentMentor = await Mentor.findById(student.mentor);

 // if the current mentor and the new mentor are the same, return an error response
 if (currentMentor._id.toString() === mentor._id.toString()) {
    return res.status(400).json({ message: 'The student
















































